--- a/libavfilter/vf_xfade.c
+++ b/libavfilter/vf_xfade.c
@@ -135,6 +135,10 @@ typedef struct XFadeContext {
     void (*transitionf)(AVFilterContext *ctx, const AVFrame *a, const AVFrame *b, AVFrame *out, float progress,
                         int slice_start, int slice_end, int jobnr);

+    char *easing_str; // easing name with optional args
+    char *transition_str; // transition name with optional args
+    struct XFadeEasingContext *k; // xfade-easing data
+
     AVExpr *e;
 } XFadeContext;

@@ -167,10 +171,13 @@ static const AVOption xfade_options[] = {
     { "easing", "set cross fade easing", OFFSET(easing_str), AV_OPT_TYPE_STRING, {.str=NULL}, 0, 0, FLAGS },
     { "transition", "set cross fade transition", OFFSET(transition_str), AV_OPT_TYPE_STRING, {.str=NULL}, 0, 0, FLAGS, "transition" },
     {   "custom",    "custom transition",     0, AV_OPT_TYPE_CONST, {.i64=CUSTOM},    0, 0, FLAGS, "transition" },
     {   "fade",      "fade transition",       0, AV_OPT_TYPE_CONST, {.i64=FADE},      0, 0, FLAGS, "transition" },
     {   "wipeleft",  "wipe left transition",  0, AV_OPT_TYPE_CONST, {.i64=WIPELEFT},  0, 0, FLAGS, "transition" },
@@ -2106,6 +2113,8 @@ static double b1(void *priv, double x, double y) { return getpix(priv, x, y, 1,
 static double b2(void *priv, double x, double y) { return getpix(priv, x, y, 2, 1); }
 static double b3(void *priv, double x, double y) { return getpix(priv, x, y, 3, 1); }

+#include "xfade-easing.h" // easing & extended transitions
+
 static int config_output(AVFilterLink *outlink)
 {
     AVFilterContext *ctx = outlink->src;
@@ -2175,6 +2184,9 @@ static int config_output(AVFilterLink *outlink)
     if (s->duration)
         s->duration_pts = av_rescale_q(s->duration, AV_TIME_BASE_Q, outlink->time_base);

+    int ret = config_xfade_easing(ctx);
+    if (ret <= 0) return ret; // error or extended transition
+
     switch (s->transition) {
     case CUSTOM:     s->transitionf = s->depth <= 8 ? custom8_transition     : custom16_transition;     break;
     case FADE:       s->transitionf = s->depth <= 8 ? fade8_transition       : fade16_transition;       break;
@@ -2269,7 +2281,7 @@ static int xfade_slice(AVFilterContext *ctx, void *arg, int jobnr, int nb_jobs)
     int slice_start = (outlink->h *  jobnr   ) / nb_jobs;
     int slice_end   = (outlink->h * (jobnr+1)) / nb_jobs;

     s->transitionf(ctx, td->xf[0], td->xf[1], td->out, ease(s, td->progress), slice_start, slice_end, jobnr);

     return 0;
 }
