name: Build FFmpeg for Android

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.1.5

    - name: Set up environment
      run: |
        # 安装必要的依赖
        sudo apt-get update
        sudo apt-get install -y autoconf automake build-essential cmake git libtool pkg-config texinfo wget yasm fontconfig libfreetype6-dev libfribidi-dev libaom-dev libass-dev libbluray-dev libbz2-dev libdav1d-dev libgnutls28-dev libiconv-hook-dev liblzma-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev libopenmpt-dev libopus-dev libsoxr-dev libsrt-openssl-dev libssh-dev libtheora-dev libv4l-dev libvo-amrwbenc-dev libvorbis-dev libvpx-dev libvidstab-dev libwebp-dev libx264-dev libx265-dev libxml2-dev libzimg-dev ocl-icd-dev zlib1g-dev opencl-headers

    - name: Download and set up NDK
      run: |
        # 下载并解压NDK
        wget https://dl.google.com/android/repository/android-ndk-r26d-linux.zip
        unzip android-ndk-r26d-linux.zip
        export ANDROID_NDK_HOME=$PWD/android-ndk-r26d
        export PATH=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH

    - name: Output NDK directory structure
      run: |
        # 输出NDK目录结构以确认文件路径
        find $ANDROID_NDK_HOME

    - name: Apply NDK patches
      run: |
        # 重新设置 ANDROID_NDK_HOME 环境变量
        export ANDROID_NDK_HOME=$PWD/android-ndk-r26d 
        # 进入 NDK 目录
        cd $ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr
        pwd  # 打印当前工作目录

        # 测试文件路径
        ls -l ./include/bits/struct_file.h

        # 应用补丁，注意 -p 参数
        for patch in $GITHUB_WORKSPACE/ndk-26b/*.patch; do
          if ! patch -N -p5 < $patch; then 
            echo "Failed to apply patch with -p5, trying with -p6"
            patch -N -p6 < $patch  
          fi
        done

    - name: Copy libintl.h and langinfo.h  # 保留此步骤
      run: |
        # 复制 libintl.h 和 langinfo.h 到 NDK 适当的位置
        cp $GITHUB_WORKSPACE/ndk-26b/libintl.h $ANDROID_NDK_HOME/sysroot/usr/include/
        cp $GITHUB_WORKSPACE/ndk-26b/langinfo.h $ANDROID_NDK_HOME/sysroot/usr/include/        

    - name: Apply FFmpeg patches
      run: |
        # 进入FFmpeg目录
        cd $GITHUB_WORKSPACE/ffmpeg
        # 应用补丁
        patch -p1 < configure.patch
        patch -p1 < libavcodec-allcodecs.c.patch
        patch -p1 < libavutil-file_open.c.patch

    - name: Build FFmpeg
      run: |
        # 设置环境变量
        export TERMUX_PKG_SRCDIR=$GITHUB_WORKSPACE/ffmpeg
        export TERMUX_PKG_BUILDDIR=$GITHUB_WORKSPACE/ffmpeg/build
        export TERMUX_PREFIX=$GITHUB_WORKSPACE/ffmpeg/prefix
        export TERMUX_HOST_PLATFORM=arm-linux-androideabi
        export AS=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/arm-linux-androideabi-as
        export CC=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/armv7a-linux-androideabi21-clang
        export CXX=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/armv7a-linux-androideabi21-clang++
        export NM=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/arm-linux-androideabi-nm
        export PKG_CONFIG=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/arm-linux-androideabi-pkg-config
        export STRIP=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/arm-linux-androideabi-strip

        # 创建构建目录
        mkdir -p $TERMUX_PKG_BUILDDIR
        cd $TERMUX_PKG_BUILDDIR

        # 运行构建脚本
        chmod +x $TERMUX_PKG_SRCDIR/build.sh
        $TERMUX_PKG_SRCDIR/build.sh | tee build.log  # 将构建日志保存到 build.log

    - name: Upload FFmpeg binary
      uses: actions/upload-artifact@v4
      with:
        name: ffmpeg-binary
        path: $TERMUX_PREFIX/bin/ffmpeg
