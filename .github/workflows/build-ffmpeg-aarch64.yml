name: Build FFmpeg with x264 for Android

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.1.5
      
    - name: Setup environment variables
      run: |
        echo "TT=armv7a-linux-androideabi" >> $GITHUB_ENV
        echo "NDK=/usr/local/lib/android/sdk/ndk/25.2.9519653" >> $GITHUB_ENV
        echo "PKG_CONFIG_PATH=$GITHUB_WORKSPACE:$PKG_CONFIG_PATH" >> $GITHUB_ENV
        
    - name: ndk
      if: false
      run: |
        ls -R $NDK/toolchains/llvm/prebuilt/linux-x86_64/bin
    
    - name: Download FFmpeg source
      run: |
        wget -O - https://www.ffmpeg.org/releases/ffmpeg-7.0.1.tar.xz | tar -xJv -C $GITHUB_WORKSPACE
    
    - name: 下载
      run: |
        cd $GITHUB_WORKSPACE/ffmpeg-7.0.1
        wget --header="Accept: application/vnd.github.v3.raw" -O libavfilter/xfade-easing.h "https://api.github.com/repos/scriptituk/xfade-easing/contents/src/xfade-easing.h"
        wget --header="Accept: application/vnd.github.v3.raw" -O libavfilter/vf_xfade.c "https://api.github.com/repos/scriptituk/xfade-easing/contents/src/vf_xfade.c"
    
    - name: Download filter
      if: false
      run: |
        cd $GITHUB_WORKSPACE/ffmpeg-7.0.1
        curl -H "Accept: application/vnd.github.v3.raw" -L -o libavfilter/xfade-easing.h "https://api.github.com/repos/scriptituk/xfade-easing/contents/src/xfade-easing.h"
        curl -H "Accept: application/vnd.github.v3.raw" -L -o libavfilter/vf_xfade.c "https://api.github.com/repos/scriptituk/xfade-easing/contents/src/vf_xfade.c"
    
    - name: Download filter and apply patch using curl
      if: false
      run: |
        cd $GITHUB_WORKSPACE/ffmpeg-7.0.1
        curl -L -o libavfilter/xfade-easing.h https://raw.githubusercontent.com/scriptituk/xfade-easing/main/src/xfade-easing.h
        curl -L -o libavfilter/vf_xfade.c https://raw.githubusercontent.com/scriptituk/xfade-easing/main/src/vf_xfade.c
    
    - name: Download filter and apply patch using wget
      if: false
      run: |
        cd $GITHUB_WORKSPACE/ffmpeg-7.0.1
        wget -O libavfilter/xfade-easing.h https://raw.githubusercontent.com/scriptituk/xfade-easing/main/src/xfade-easing.h
        wget -O libavfilter/vf_xfade.c https://raw.githubusercontent.com/scriptituk/xfade-easing/main/src/vf_xfade.c
    
    - name: Copy filter and apply patch
      if: false
      run: |
        cd $GITHUB_WORKSPACE/ffmpeg-7.0.1
        cp $GITHUB_WORKSPACE/xfade-easing.h libavfilter/
        cp $GITHUB_WORKSPACE/vf_xfade.c libavfilter/vf_xfade.c
       #多层下载目录路径 wget --header="Accept: application/vnd.github.v3.raw" -O x264_fixes.patch https://api.github.com/repos/pdahd/pda/contents/ggg/kkk/x264_fixes.patch
       # patch -p0 < x264_fixes.patch
    
    - name: Check framesync.c line 91
      if: false
      run: |
        cd $GITHUB_WORKSPACE/ffmpeg-7.0.1
        find . -name vf_blend.c
        find . -name vf_xfade.c
        sed -n '91p' libavfilter/framesync.c
    
    - name: Find AVFilter struct definition
      if: false
      run: |
        cd $GITHUB_WORKSPACE/ffmpeg-7.0.1
        grep -rn 'typedef struct AVFilter' --include='*.h'
        cat libavfilter/avfilter.h
    
    - name: 看看
      if: false
      run: |
        cd $GITHUB_WORKSPACE/ffmpeg-7.0.1
        cat libavfilter/formats.h
    
    - name: Show context around target lines in Makefile and allfilters.c
      if: false
      run: |
        grep -C 5 "CONFIG_ZSCALE_FILTER" $GITHUB_WORKSPACE/ffmpeg-7.0.1/libavfilter/Makefile
        echo "----------------------------------------"
        grep -C 5 "ff_vf_zscale" $GITHUB_WORKSPACE/ffmpeg-7.0.1/libavfilter/allfilters.c
    
    - name: 444 content
      if: false
      run: |
        grep -Ri "opengl" $GITHUB_WORKSPACE/ffmpeg-7.0.1
        
    
    - name: Modify configure script for OpenGL ES
      if: false
      run: |
        cd $GITHUB_WORKSPACE/ffmpeg-7.0.1
        sed -i '/enabled opengl            && { check_lib opengl GL\/glx.h glXGetProcAddress "-lGL" ||/,/^                             }/c\enabled opengl            && { check_lib opengl "GLES2\/gl2.h" glGetError "-lGLESv2" || check_lib opengl "EGL/egl.h" eglGetDisplay "-lEGL" || die "ERROR: opengl not found."; }' configure
    
    - name: Print FFmpeg configure script content
      if: false
      run: |
        cd $GITHUB_WORKSPACE/ffmpeg-7.0.1
        cat configure
    
    - name: 查一
      if: false
      run: |
        ls -R /usr/local/lib/android/sdk/ndk/25.2.9519653/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/include
        find $NDK -name "*.pc"
    
    - name: 查2
      if: false
      run: |
        find /usr/local/lib/android/sdk/ndk/25.2.9519653 -name libGLESv2.so
    
    - name: Copy gltransition filter source
      if: false
      run: |
        cp $GITHUB_WORKSPACE/vf_gltransition.c $GITHUB_WORKSPACE/ffmpeg-7.0.1/libavfilter/
        # 检查文件是否成功复制
        ls $GITHUB_WORKSPACE/ffmpeg-7.0.1/libavfilter/vf_gltransition.c
        ls $NDK/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/lib/arm-linux-androideabi/24
        find /usr/local/lib/android/sdk/ndk/25.2.9519653 -name pkgconfig
        find /usr/local/lib/android/sdk/ndk/25.2.9519653 -name .pc
        
        find /usr/local/lib/android/sdk/ndk/25.2.9519653 -name libGLESv2.so
    
    - name: Apply gltransition patch
      if: false
      run: |
        cd $GITHUB_WORKSPACE/ffmpeg-7.0.1
        git apply $GITHUB_WORKSPACE/ffmpeg.diff
        # 检查是否有未应用的修改
        git diff --exit-code # 如果没有输出，说明补丁已成功应用
    
    - name: 显示可用的FFmpeg配置选项
      if: false
      run: |
        cd $GITHUB_WORKSPACE/ffmpeg-7.0.1
        cp $GITHUB_WORKSPACE/vf_gltransition.c libavfilter/
        ls libavfilter/vf_gltransition.c
        ./configure --help
    
    - name: Check ARCH option definition in configure script
      if: false
      run: |
        cd $GITHUB_WORKSPACE/ffmpeg-7.0.1
        grep -i "cpu" configure
    
    - name: Customize FFmpeg banner in opt_common.c
      run: |
        cd $GITHUB_WORKSPACE/ffmpeg-7.0.1
        BUILD_DATE=$(date +"%Y-%m-%d")
        sed -i '/void show_banner(int argc, char \*\*argv, const OptionDef \*options)/,/^}/c\
        #include <string.h>\
        void show_banner(int argc, char **argv, const OptionDef *options) {\
           char banner_text[256];\
           int banner_length;\
           snprintf(banner_text, sizeof(banner_text), "FFmpeg %s (armv7-a custom build) © 2000-2024 FFmpeg Team.", FFMPEG_VERSION);\
           banner_length = strlen(banner_text);\
           av_log(NULL, AV_LOG_INFO, "%.*s\\n", banner_length, "--------------------------------------------------------------");\
           av_log(NULL, AV_LOG_INFO, "%s\\n", banner_text);\
           av_log(NULL, AV_LOG_INFO, "Built by pdahd (https://github.com/pdahd) on %s.\\n", "'$BUILD_DATE'");\
           av_log(NULL, AV_LOG_INFO, "%.*s\\n", banner_length, "---------------------------------------------------------");\
           }' fftools/opt_common.c
    
    - name: Customize FFmpeg banner in opt_common.c with green color
      if: false
      run: |
        cd $GITHUB_WORKSPACE/ffmpeg-7.0.1
        BUILD_DATE=$(date +"%Y-%m-%d")
        sed -i '/void show_banner(int argc, char \*\*argv, const OptionDef \*options)/,/^}/c\
        void show_banner(int argc, char **argv, const OptionDef *options) {\n\
        av_log(NULL, AV_LOG_INFO, "FFmpeg %s (armv7-a custom build) © 2000-2024 FFmpeg Team.\\nBuilt by pdahd (https://github.com/pdahd) on %s.\\n", FFMPEG_VERSION, "'$BUILD_DATE'");\n\
        }' fftools/opt_common.c
    
    - name: Upload blend and xfade filter source files
      if: false
      uses: actions/upload-artifact@v4
      with:
        name: avfilter.h-and-formats.h
        path: |
          ffmpeg-7.0.1/libavfilter/avfilter.h
          ffmpeg-7.0.1/libavfilter/formats.h
    
    - name: Upload blend and xfade filter source files
      if: false
      uses: actions/upload-artifact@v4
      with:
        name: blend-and-xfade-source
        path: |
          ffmpeg-7.0.1/libavfilter/vf_blend.c
          ffmpeg-7.0.1/libavfilter/vf_xfade.c
    
    - name: Compile and install x264 for armv7a
      run: |
        git clone https://code.videolan.org/videolan/x264.git
        cd x264
        wget --header="Accept: application/vnd.github.v3.raw" -O x264_fixes.patch https://api.github.com/repos/pdahd/pda/contents/x264_fixes.patch
        patch -p0 < x264_fixes.patch
        export TOOLCHAIN=$NDK/toolchains/llvm/prebuilt/linux-x86_64
        export SYSROOT=$TOOLCHAIN/sysroot 
        export CC=$TOOLCHAIN/bin/${TT}24-clang
        export CXX=$TOOLCHAIN/bin/${TT}24-clang++
        export CROSS_PREFIX=$TOOLCHAIN/bin/llvm-
        export CFLAGS="-DANDROID -Wall -fPIC" 
        export DIR=$GITHUB_WORKSPACE/2024/lib
        export HOST=$TT
        ./configure --help || true
   
        ./configure --enable-shared \
                    --libdir="$DIR" \
                    --enable-pic \
                    --disable-asm \
                    --host="$HOST" \
                    --cross-prefix="$CROSS_PREFIX" \
                    --sysroot="$SYSROOT" \
                    --extra-cflags="$CFLAGS"
        make -j$(nproc)
        sudo make install

    - name: Copy filter and apply patch
      if: false
      run: |
        cd $GITHUB_WORKSPACE/ffmpeg-7.0.1
        cp $GITHUB_WORKSPACE/vf_gltransition.c libavfilter/
        echo "vf_gltransition.c copied to: $(pwd)/libavfiltr/vf_gltransition.c"
        patch -p0 < ../ff.patch 
    
    - name: Show around target lines in Makefile and allfilters.c
      if: false
      run: |
        grep -C 5 "CONFIG_ZSCALE_FILTER" $GITHUB_WORKSPACE/ffmpeg-7.0.1/libavfilter/Makefile
        echo "----------------------------------------"
        grep -C 5 "ff_vf_zscale" $GITHUB_WORKSPACE/ffmpeg-7.0.1/libavfilter/allfilters.c
    
    - name: Download and install NDK 21e
      if: false
      run: |
        wget https://dl.google.com/android/repository/android-ndk-r21e-linux-x86_64.zip
        unzip android-ndk-r21e-linux-x86_64.zip
        echo "NDK21E=$GITHUB_WORKSPACE/android-ndk-r21e" >> $GITHUB_ENV
    
    - name: Configure FFmpeg for armv7a with x264
      run: |
        export TOOLCHAIN=$NDK/toolchains/llvm/prebuilt/linux-x86_64
        export SYSROOT=$TOOLCHAIN/sysroot 
        export CC=$TOOLCHAIN/bin/${TT}24-clang
        export CXX=$TOOLCIN/bin/${TT}24-clang++
        export CROSS_PREFIX=$TOOLCHAIN/bin/llvm-
        export PKG_CONFIG=/usr/bin/pkg-config
        export PREFIX=$GITHUB_WORKSPACE/2024
        
        cd $GITHUB_WORKSPACE/ffmpeg-7.0.1
        ./configure --help || true
        ./configure \
          --arch=arm \
          --cpu=armv7-a \
          --cc="$CC" \
          --cxx="$CXX" \
          --cross-prefix="$CROSS_PREFIX" \
          --disable-indevs \
          --disable-outdevs \
          --disable-static \
          --disable-symver \
          --pkg-config="$PKG_CONFIG" \
          --enable-libx264 \
          --enable-shared \
          --enable-mediacodec \
          --enable-version3 \
          --enable-jni \
          --enable-indev=lavfi \
          --enable-cross-compile \
          --enable-neon \
          --enable-gpl \
          --prefix="$PREFIX" \
          --target-os=android \
          --disable-vulkan \
          --sysroot="$SYSROOT" 

    - name: Build FFmpeg for armv7a
      run: |
        cd $GITHUB_WORKSPACE/ffmpeg-7.0.1
        make -j$(nproc)
        sudo make install
    
    - name: 打包
      if: false
      run: |
        cp /usr/local/lib/libx264.so.164 $GITHUB_WORKSPACE/2024/lib
        cp /usr/local/lib/libx264.so $GITHUB_WORKSPACE/2024/lib
      
    - name: Copy libx264.so.164 to ffmpeg lib directory
      if: false
      run: cp $GITHUB_WORKSPACE/exlibs/lib/libx264.so.164 ${{ github.workspace }}/2024/lib
    
    - name: List files in lib directory
      run: ls -l ${{ github.workspace }}/2024/lib
    
    - name: Upload FFmpeg Build Artifact for armv7a
      uses: actions/upload-artifact@v4
      with:
        name: ffmpeg-armeabi-v7a
        path: ${{ github.workspace }}/2024/**
    
    - name: Upload Makefile and allfilters.c for download
      if: false
      uses: actions/upload-artifact@v4
      with:
        name: FFmpeg-original-files
        path: |
          ${{ github.workspace }}/ffmpeg-7.0.1/libavfilter/Makefile
          ${{ github.workspace }}/ffmpeg-7.0.1/libavfilter/allfilters.c
