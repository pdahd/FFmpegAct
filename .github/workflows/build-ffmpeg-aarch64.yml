name: Build FFmpeg with x264 for Android

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.1.5
      
    - name: Setup environment variables
      run: |
        echo "TT=armv7a-linux-androideabi" >> $GITHUB_ENV
        echo "NDK=/usr/local/lib/android/sdk/ndk/25.2.9519653" >> $GITHUB_ENV
        echo "PKG_CONFIG_PATH=$GITHUB_WORKSPACE/exlibs/lib/pkgconfig:$PKG_CONFIG_PATH" >> $GITHUB_ENV

    - name: Download FFmpeg source
      run: |
        wget -O - https://www.ffmpeg.org/releases/ffmpeg-7.0.1.tar.xz | tar -xJv -C $GITHUB_WORKSPACE

    - name: Print original ffmpeg.c content
      run: |
        cd $GITHUB_WORKSPACE/ffmpeg-7.0.1
        cat fftools/ffmpeg.c
    
    - name: Modify FFmpeg source to display custom logo only
      run: |
        cd $GITHUB_WORKSPACE/ffmpeg-7.0.1
        BUILD_DATE=$(date +"%Y-%m-%d")
        printf '%s\n' 'static void show_banner(int argc, char **argv, const OptionDef *options) {' \
        '    av_log(NULL, AV_LOG_INFO, "\n");' \
        '    av_log(NULL, AV_LOG_INFO, "  FFmpeg version %s for arm architecture (static build)\n", FFMPEG_VERSION);' \
        '    av_log(NULL, AV_LOG_INFO, "  ©️ 2000-2024 the FFmpeg developers. Licensed under the LGPLv2.1 and later.\n");' \
        '    av_log(NULL, AV_LOG_INFO, "  Built by pdahd from GitHub (https://github.com/pdahd)\n");' \
        '    av_log(NULL, AV_LOG_INFO, "  Build date: '$BUILD_DATE'\n");' \
        '    av_log(NULL, AV_LOG_INFO, "\n");' \
        '}' > fftools/ffmpeg.c
        cat fftools/ffmpeg.c
    
    - name: Compile and install x264 for armv7a
      if: false
      run: |
        git clone https://code.videolan.org/videolan/x264.git
        cd x264
        patch -p0 < ../x264_fixes.patch
        export TOOLCHAIN=$NDK/toolchains/llvm/prebuilt/linux-x86_64
        export SYSROOT=$TOOLCHAIN/sysroot 
        export CC=$TOOLCHAIN/bin/${TT}24-clang
        export CXX=$TOOLCHAIN/bin/${TT}24-clang++
        export CROSS_PREFIX=$TOOLCHAIN/bin/llvm-
        export CFLAGS="-DANDROID -Wall -fPIC" 
        export PREFIX=$GITHUB_WORKSPACE/exlibs
        export HOST=$TT
        
        ./configure --prefix="$PREFIX" \
                    --enable-static \
                    --enable-pic \
                    --disable-asm \
                    --host="$HOST" \
                    --cross-prefix="$CROSS_PREFIX" \
                    --sysroot="$SYSROOT" \
                    --extra-cflags="$CFLAGS"
        make -j$(nproc)
        make install

    - name: Configure FFmpeg for armv7a with x264
      run: |
        export TOOLCHAIN=$NDK/toolchains/llvm/prebuilt/linux-x86_64
        export SYSROOT=$TOOLCHAIN/sysroot 
        export CC=$TOOLCHAIN/bin/${TT}24-clang
        export CXX=$TOOLCHAIN/bin/${TT}24-clang++
        export CROSS_PREFIX=$TOOLCHAIN/bin/llvm-
        export PKG_CONFIG=/usr/bin/pkg-config
        export PREFIX=$GITHUB_WORKSPACE/2024
        
        cd $GITHUB_WORKSPACE/ffmpeg-7.0.1
        ./configure \
          --arch=arm \
          --cc="$CC" \
          --cxx="$CXX" \
          --cross-prefix="$CROSS_PREFIX" \
          --disable-indevs \
          --disable-outdevs \
          --disable-shared \
          --disable-symver \
          --pkg-config="$PKG_CONFIG" \
          --enable-static \
          --enable-cross-compile \
          --enable-libx264 \
          --enable-neon \
          --enable-gpl \
          --prefix="$PREFIX" \
          --target-os=android \
          --disable-vulkan \
          --sysroot="$SYSROOT" 

    - name: Build FFmpeg for armv7a
      run: |
        cd $GITHUB_WORKSPACE/ffmpeg-7.0.1
        make -j$(nproc)
        make install
    
    - name: Upload FFmpeg Build Artifact for armv7a
      uses: actions/upload-artifact@v4
      with:
        name: ffmpeg-armeabi-v7a
        path: ${{ github.workspace }}/2024/**
