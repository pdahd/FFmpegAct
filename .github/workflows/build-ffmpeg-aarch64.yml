name: Build FFmpeg for Termux

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ANDROID_NDK_VERSION: r26d

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download FFmpeg source
      run: |
        wget -O - https://www.ffmpeg.org/releases/ffmpeg-6.1.1.tar.xz | tar -xJv -C $GITHUB_WORKSPACE
    
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '11'

    - name: Download and extract Android NDK
      run: |
        wget https://dl.google.com/android/repository/android-ndk-${{ env.ANDROID_NDK_VERSION }}-linux.zip
        unzip android-ndk-${{ env.ANDROID_NDK_VERSION }}-linux.zip
        echo "ANDROID_NDK_HOME=$GITHUB_WORKSPACE/android-ndk-${{ env.ANDROID_NDK_VERSION }}" >> $GITHUB_ENV
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y autoconf automake build-essential cmake git libtool pkg-config texinfo zlib1g-dev yasm llvm \
          fontconfig libfreetype6-dev libfribidi-dev libgme-dev libharfbuzz-dev libaom-dev libass-dev libbluray-dev libbz2-dev \
          libdav1d-dev libgnutls28-dev libiconv-hook-dev liblzma-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev \
          libopenmpt-dev libopus-dev libsoxr-dev libsrt-openssl-dev libssh-dev libtheora-dev libv4l-dev libvo-amrwbenc-dev \
          libvorbis-dev libvpx-dev libvidstab-dev libwebp-dev libx264-dev libx265-dev libxml2-dev libxvidcore-dev libzimg-dev \
          liblcms2-dev ocl-icd-opencl-dev libsvtav1-dev 

    - name: Install gas-preprocessor
      run: |
        git clone https://github.com/FFmpeg/gas-preprocessor
        sudo cp gas-preprocessor/gas-preprocessor.pl /usr/local/bin/
        sudo chmod +x /usr/local/bin/gas-preprocessor.pl
    
    - name: Set environment variables
      run: |
        echo "API=21" >> $GITHUB_ENV
        echo "NDK=$GITHUB_WORKSPACE/android-ndk-${{ env.ANDROID_NDK_VERSION }}" >> $GITHUB_ENV
        echo "TOOLCHAIN=$GITHUB_WORKSPACE/android-ndk-${{ env.ANDROID_NDK_VERSION }}/toolchains/llvm/prebuilt/linux-x86_64" >> $GITHUB_ENV
        echo "TERMUX_HOST_PLATFORM=aarch64-linux-android" >> $GITHUB_ENV
        echo "CC=$TOOLCHAIN/bin/$TERMUX_HOST_PLATFORM$API-clang" >> $GITHUB_ENV
        echo "CXX=$TOOLCHAIN/bin/$TERMUX_HOST_PLATFORM$API-clang++" >> $GITHUB_ENV
        echo "AS=$TOOLCHAIN/bin/llvm-as" >> $GITHUB_ENV
        echo "AR=$TOOLCHAIN/bin/llvm-ar" >> $GITHUB_ENV
        echo "RANLIB=$TOOLCHAIN/bin/llvm-ranlib" >> $GITHUB_ENV
        echo "NM=$TOOLCHAIN/bin/llvm-nm" >> $GITHUB_ENV
        echo "STRIP=$TOOLCHAIN/bin/llvm-strip" >> $GITHUB_ENV
        echo "PKG_CONFIG=/usr/bin/pkg-config" >> $GITHUB_ENV
    
    - name: Configure FFmpeg for arm64-v8a
      continue-on-error: true
      run: |
        cd $GITHUB_WORKSPACE/ffmpeg-6.1.1
        ABI=arm64-v8a
        _ARCH=aarch64
        _EXTRA_CONFIGURE_FLAGS="--enable-neon"
        ./configure \
          --arch="${_ARCH}" \
          --as="${{ env.AS }}" \
          --cc="${{ env.CC }}" \
          --cxx="${{ env.CXX }}" \
          --ar="${{ env.AR }}" \
          --ranlib="${{ env.RANLIB }}" \
          --nm="${{ env.NM }}" \
          --pkg-config="${{ env.PKG_CONFIG }}" \
          --strip="${{ env.STRIP }}" \
          --cross-prefix="${{ env.TERMUX_HOST_PLATFORM }}-" \
          --disable-indevs \
          --disable-outdevs \
          --enable-indev=lavfi \
          --disable-static \
          --disable-symver \
          --enable-cross-compile \
          --enable-gnutls \
          --enable-gpl \
          --enable-version3 \
          --enable-jni \
          --enable-lcms2 \
          --enable-libaom \
          --enable-libass \
          --enable-libbluray \
          --enable-libdav1d \
          --enable-libfontconfig \
          --enable-libfreetype \
          --enable-libfribidi \
          --enable-libgme \
          --enable-libharfbuzz \
          --enable-libmp3lame \
          --enable-libopencore-amrnb \
          --enable-libopencore-amrwb \
          --enable-libopenmpt \
          --enable-libopus \
          --enable-librav1e \
          --enable-libsoxr \
          --enable-libsrt \
          --enable-libssh \
          --enable-libsvtav1 \
          --enable-libtheora \
          --enable-libv4l2 \
          --enable-libvidstab \
          --enable-libvo-amrwbenc \
          --enable-libvorbis \
          --enable-libvpx \
          --enable-libwebp \
          --enable-libx264 \
          --enable-libx265 \
          --enable-libxml2 \
          --enable-libxvid \
          --enable-libzimg \
          --enable-mediacodec \
          --enable-opencl \
          --enable-shared \
          --prefix=$GITHUB_WORKSPACE/android/$ABI \
          --target-os=android \
          --disable-vulkan \
          $_EXTRA_CONFIGURE_FLAGS \
          --disable-libfdk-aac
    
    - name: Upload config.log
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: config-log
        path: ffmpeg-6.1.1/ffbuild/config.log
        if-no-files-found: warn
