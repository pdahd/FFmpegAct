name: Build FFmpeg for Android (Termux)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CC: /usr/local/lib/android/sdk/ndk/25.2.9519653/toolchains/llvm/prebuilt/linux-x86_64/bin/armv7a-linux-androideabi24-clang
  CXX: /usr/local/lib/android/sdk/ndk/25.2.9519653/toolchains/llvm/prebuilt/linux-x86_64/bin/armv7a-linux-androideabi24-clang++
  CROSS_PREFIX: /usr/local/lib/android/sdk/ndk/25.2.9519653/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-
  SYSROOT: /usr/local/lib/android/sdk/ndk/25.2.9519653/toolchains/llvm/prebuilt/linux-x86_64/sysroot
  FFLIB: ./2024/lib
  PREFIX: ./2024
  PKG_CONFIG: /usr/bin/pkg-config
  HOST: armv7a-linux-androideabi
  LOCLIB: /usr/local/lib

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.1.5

    - name: Prepare Source Code
      run: |
        W="wget -O -"
        for url in https://dl.google.com/android/repository/android-ndk-r26d-linux.zip; do
        if [[ "$url" == *.tar.xz ]]; then
        $W "$url" | tar -xJv 
        elif [[ "$url" == *.tar.gz ]]; then
        $W "$url" | tar -xzv 
        elif [[ "$url" == *.tar.bz2 ]]; then
        $W "$url" | tar -xjvf 
        elif [[ "$url" == *.zip ]]; then
        $W "$url" > Z.zip && unzip Z.zip
        fi
        done
        git clone https://code.videolan.org/videolan/x264.git
        echo "----------------------------------------"
        ls -R android-ndk-r26d/toolchains/llvm/prebuilt/linux-x86_64/bin
    
    - name: Apply Patches and Compile x264
      run: |
        cd x264
        curl -L https://raw.githubusercontent.com/pdahd/pda/main/x264_fixes.patch | patch -p0
        ./configure --extra-cflags="-DANDROID -Wall -fPIC" \
                    --cross-prefix=$CROSS_PREFIX \
                    --sysroot=$SYSROOT \
                    --host=$HOST \
                    --enable-shared \
                    --enable-pic \
                    --disable-asm 
        make -j$(nproc)
        sudo make install  
    
    - name: Compile libfdk-aac
      run: |
        cd fdk-aac-2.0.3
        ./autogen.sh
        sed -i '/#include "log\/log.h"/d; s/android_errorWriteLog(0x534e4554, "112160868");/\/\/android_errorWriteLog(0x534e4554, "112160868");/g' libSBRdec/src/lpp_tran.cpp
        ./configure --enable-shared --host=$HOST --with-pic
        make -j$(nproc)
        sudo make install
    
    - name: Configure FFmpeg and Enhance Filters
      run: |
        cd ffmpeg-7.0.1
        BUILD_DATE=$(date +"%Y-%m-%d")
        for file in xfade-easing.h vf_xfade.c; do
        curl -L -o "libavfilter/${file}" "https://raw.githubusercontent.com/scriptituk/xfade-easing/main/src/${file}"
        done
        sed -i '/void show_banner(int argc, char \*\*argv, const OptionDef \*options)/,/^}/c\
        void show_banner(int argc, char **argv, const OptionDef *options) {\n\
        av_log(NULL, AV_LOG_ERROR, "-------------------------------------------------------------------\\n");\n\
        av_log(NULL, AV_LOG_INFO | (AV_CLASS_CATEGORY_SWRESAMPLER << 8), "FFmpeg %s (armv7-a custom build) Â© 2000-2024 FFmpeg Developers.\\n", FFMPEG_VERSION);\n\
        av_log(NULL, AV_LOG_INFO | (AV_CLASS_CATEGORY_SWRESAMPLER << 8), "Built by pdahd (https://github.com/pdahd/FFmpegAct) on %s.\\n", "'$BUILD_DATE'");\n\
        av_log(NULL, AV_LOG_ERROR, "-------------------------------------------------------------------\\n");\n\
        }' fftools/opt_common.c
        ./configure --cross-prefix=$CROSS_PREFIX \
                    --pkg-config=$PKG_CONFIG \
                    --target-os=android \
                    --sysroot=$SYSROOT \
                    --prefix=$PREFIX \
                    --cpu=armv7-a \
                    --arch=arm \
                    --cxx=$CXX \
                    --cc=$CC \
                    --enable-cross-compile \
                    --enable-indev=lavfi \
                    --enable-libfdk-aac \
                    --enable-mediacodec \
                    --enable-version3 \
                    --enable-nonfree \
                    --enable-libx264 \
                    --enable-shared \
                    --enable-neon \
                    --enable-jni \
                    --enable-gpl \
                    --disable-outdevs \
                    --disable-vulkan \
                    --disable-indevs \
                    --disable-static \
                    --disable-symver 

    - name: Build and Install FFmpeg
      run: |
        cd ffmpeg-7.0.1
        make -j$(nproc)
        make install

    - name: List files in lib directory
      run: |
        LIBS=(libx264.so.164 \
              libfdk-aac.so)
        for lib in "${LIBS[@]}"; do
        cp "$LOCLIB/$lib" "$FFLIB"
        done
        ls -l $FFLIB

    - name: Upload FFmpeg Build as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ffmpeg-armeabi-v7a
        path: 2024/**
