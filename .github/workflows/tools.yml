name: Run FFmpeg with QEMU

on: [push]

jobs:
  run-ffmpeg:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.1.5

    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '11'

    - name: Install QEMU
      run: |
        sudo apt-get update
        sudo apt-get install -y qemu qemu-user-static

    - name: Build FFmpeg with x264 for Android
      run: |
        # 设置环境变量
        echo "TT=armv7a-linux-androideabi" >> $GITHUB_ENV
        echo "NDK=/usr/local/lib/android/sdk/ndk/25.2.9519653" >> $GITHUB_ENV

        # 下载FFmpeg源码
        wget -O - https://www.ffmpeg.org/releases/ffmpeg-7.0.1.tar.xz | tar -xJv -C $GITHUB_WORKSPACE

        # 修改配置脚本以支持OpenGL ES
        cd $GITHUB_WORKSPACE/ffmpeg-7.0.1
        sed -i '/enabled opengl            && { check_lib opengl GL\/glx.h glXGetProcAddress "-lGL" ||/,/^                             }/c\enabled opengl            && { check_lib opengl "GLES2\/gl2.h" glGetError "-lGLESv2" || check_lib opengl "EGL/egl.h" eglGetDisplay "-lEGL" || die "ERROR: opengl not found."; }' configure

        # 自定义FFmpeg横幅
        BUILD_DATE=$(date +"%Y-%m-%d")
        sed -i '/void show_banner(int argc, char \*\*argv, const OptionDef \*options)/,/^}/c\
        void show_banner(int argc, char **argv, const OptionDef *options) {\n\
        av_log(NULL, AV_LOG_INFO, "FFmpeg %s - arm static build © 2000-2024 FFmpeg Team.\\nBuilt by pdahd (https://github.com/pdahd) on %s.\\n", FFMPEG_VERSION, "'$BUILD_DATE'");\n\
        }' fftools/opt_common.c

        # 编译并安装x264
        git clone https://code.videolan.org/videolan/x264.git
        cd x264
        patch -p0 < ../x264_fixes.patch
        export TOOLCHAIN=$NDK/toolchains/llvm/prebuilt/linux-x86_64
        export SYSROOT=$TOOLCHAIN/sysroot 
        export CC=$TOOLCHAIN/bin/${TT}24-clang
        export CXX=$TOOLCHAIN/bin/${TT}24-clang++
        export CROSS_PREFIX=$TOOLCHAIN/bin/llvm-
        export CFLAGS="-DANDROID -Wall -fPIC" 
        export PREFIX=/usr/local
        export HOST=$TT
        
        ./configure --prefix="$PREFIX" \
                    --enable-static \
                    --enable-pic \
                    --disable-asm \
                    --host="$HOST" \
                    --cross-prefix="$CROSS_PREFIX" \
                    --sysroot="$SYSROOT" \
                    --extra-cflags="$CFLAGS"
        make -j$(nproc)
        sudo make install

        # 复制过滤器并应用补丁
        cd $GITHUB_WORKSPACE/ffmpeg-7.0.1
        cp $GITHUB_WORKSPACE/vf_gltransition.c libavfilter/
        echo "vf_gltransition.c copied to: $(pwd)/libavfilter/vf_gltransition.c"
        patch -p0 < ../ff.patch

        # 配置FFmpeg
        export TOOLCHAIN=$NDK/toolchains/llvm/prebuilt/linux-x86_64
        export SYSROOT=$TOOLCHAIN/sysroot 
        export CC=$TOOLCHAIN/bin/${TT}24-clang
        export CXX=$TOOLCHAIN/bin/${TT}24-clang++
        export CROSS_PREFIX=$TOOLCHAIN/bin/llvm-
        export PKG_CONFIG=/usr/bin/pkg-config
        export PREFIX=$GITHUB_WORKSPACE/2024
      
        cd $GITHUB_WORKSPACE/ffmpeg-7.0.1
        ./configure \
          --arch=arm \
          --cc="$CC" \
          --cxx="$CXX" \
          --cross-prefix="$CROSS_PREFIX" \
          --disable-indevs \
          --disable-outdevs \
          --disable-static \
          --disable-symver \
          --pkg-config="$PKG_CONFIG" \
          --enable-filter=gltransition \
          --enable-shared \
          --enable-libx264 \
          --enable-opengl \
          --enable-mediacodec \
          --enable-version3 \
          --enable-jni \
          --enable-indev=lavfi \
          --enable-cross-compile \
          --enable-neon \
          --enable-gpl \
          --prefix="$PREFIX" \
          --target-os=android \
          --disable-vulkan \
          --sysroot="$SYSROOT" 

        # 构建FFmpeg
        make -j$(nproc)
        make install

    - name: Run FFmpeg with QEMU
      run: |
        qemu-arm -L /usr/arm-linux-gnueabihf $GITHUB_WORKSPACE/2024/bin/ffmpeg -version
